<template>

  <!-- <div class="menu">
    <a>Home</a>
    <a>Products</a>
    <a>About</a>
    <a>About</a>
  </div> -->

  <div class="menu">
    <a v-for="a in 메뉴들" :key="a">{{a}}</a>
    <a v-for="(a,i) in 메뉴들" :key="i">{{a}}</a>
    <a v-for="(a,i) in 메뉴들" :key="i">{{i}}</a>
  </div>
  
  <!-- 강의3 숙제 : 아래 products 들을 반복문을 통해 그리기 -->
  
  <h1>방법1</h1>
  <div class="container">
    <div>
      <h4>{{products[0]}}</h4>
      <p>70만원</p>
          <!-- 클릭할 때 -->
      <!-- <button v-on:click="자바스크립트~~">허위매물신고</button><span>신고수 : 0</span> -->
      <!-- <button @click="신고수++">허위매물신고</button><span>신고수 : {{신고수}}</span> -->
      <button @click="increase(0)">허위매물신고</button><span>신고수 : {{신고수[0]}}</span>
      <!-- 마우스 hover일 때 -->
      <!-- <button @mouseover="신고수++">허위매물신고</button><span>신고수 : {{신고수}}</span> -->
    </div>
    <div>
      <h4>{{products[1]}}</h4>
      <p>60 만원</p>
      <button @click="increase(1)">허위매물신고</button><span>신고수 : {{신고수[1]}}</span>
    </div>
    <div>
      <h4>{{products[2]}}</h4>
      <p>50 만원</p>
      <button @click="increase(2)">허위매물신고</button><span>신고수 : {{신고수[2]}}</span>
    </div>
  </div>

  <h1>방법2</h1>
  <div class="container">
    <!-- <div v-for="a in tests" :key="a"> -->
    <div v-for="(a, index) in tests" :key="index">
      <h4>{{a.name}}</h4>
      <p>{{a.price}}</p>
      <button @click="increase_test(a)">허위매물신고</button><span>신고수 : {{a.count}}</span>
    </div>
  </div>

</template>

<script>



export default {
  name: 'App',
  data(){// 데이터 보관함 : 변수 값 할당 등
    return{
      메뉴들 : ['Home','Shop', 'About'],
      products : ['역삼동원룸', '천호동원룸', '마포구원룸'],
      신고수 : [0,0,0],
      tests : [
        {name : '역삼', price : 50, count : 0},
        {name : '천호', price : 60, count : 0},
        {name : '마포', price : 70, count : 0}
      ]
    }
  }
  ,
    // 함수 만드는 공간
  methods: {
    increase(index){
      this.신고수[index] +=1;
    }
    ,increase_test(obj){
      obj.count +=1;
    }
  },components: {
  
  }
  
}
</script>


<style>
#app {
  font-family: Avenir, Helvetica, Arial, sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  text-align: center;
  color: #2c3e50;
}

.menu {
  background: darkslateblue;
  padding: 15px;
  border-radius: 5px;
}

.menu a {
  color: white;
  padding: 10px;
}

.container {
  display: flex; /* Enables flexbox */
  justify-content: space-between; /* Optional: Adds space between elements */
  gap: 20px;             /* Optional: adds space between the two sections */
  align-items: flex-start; /* Aligns the top of the sections */
}

</style>